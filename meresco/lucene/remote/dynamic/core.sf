## begin license ##
#
# "Meresco Lucene" is a set of components and tools to integrate Lucene (based on PyLucene) into Meresco
#
# Copyright (C) 2013, 2015, 2018 Seecr (Seek You Too B.V.) https://seecr.nl
# Copyright (C) 2013 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
# Copyright (C) 2015 Koninklijke Bibliotheek (KB) http://www.kb.nl
# Copyright (C) 2018 Stichting Kennisnet https://www.kennisnet.nl
#
# This file is part of "Meresco Lucene"
#
# "Meresco Lucene" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Meresco Lucene" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Meresco Lucene"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

import page

def main(arguments, **kwargs):
    yield page.header(arguments=arguments, **kwargs)
    name = arguments['name'][0]
    coreInfo = [info for info in allCoreInfo() if info.name == name][0]
    yield '<h2>Index: <em>"%s"</em></h2>\n' % name
    yield '<dl>\n'
    yield '<dt>Name</dt><dd>%s</dd>\n' % name
    yield '<dt>Number of documents</dt><dd>%s</dd>\n' % page.formatInt((yield coreInfo.numDocs()))
    yield '</dl>\n'
    yield '''<p><a href="query?%s">Query</a></p>\n''' % escapeHtml(urlencode(dict(name=name)))
    yield '<dl>\n'
    yield '<dt>Fields</dt><dd>'
    yield '<ul>'
    for field in sorted((yield observable.any.fieldnames(core=name)).hits):
        yield '<li><a href="field?%s">%s</a></li>\n' % (
                escapeHtml(urlencode(dict(name=name, fieldname=field))),
                escapeHtml(field),
            )
    yield '</ul>'
    yield '</dd>'

    yield '<dt>Drilldown fields</dt><dd>'
    yield '<ul>'
    for field in sorted((yield observable.any.drilldownFieldnames(core=name)).hits):
        yield '<li><a href="drilldownvalues?%s">%s</a></li>\n' % (
                escapeHtml(urlencode(dict(name=name, path=[field]))),
                escapeHtml(field),
            )
    yield '</ul>'
    yield '</dd>\n'
    yield '</dl>'

    yield page.footer(arguments=arguments, **kwargs)
